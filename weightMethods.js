/**
 * 权重方法知识库
 * 包含各种常用权重方法及其特点、适用条件、优缺点等信息
 */
const weightMethodsDB = [
  // 主观赋权法
  {
    name: "层次分析法(AHP)",
    type: "主观赋权法",
    detail: "层次分析法是一种结构化决策方法，将复杂问题分解为层次结构，通过专家对指标两两比较进行判断，构建判断矩阵，计算特征向量得到权重。",
    suitConditions: [
      "有足够的领域专家参与",
      "指标体系具有明确的层次结构",
      "指标数量适中（一般不超过9个同级指标）"
    ],
    advantages: [
      "结构化程度高",
      "具有一致性检验机制",
      "决策过程透明可追溯",
      "考虑层次关系",
      "结合定性判断和定量计算"
    ],
    limitations: [
      "指标数量大时工作量巨大",
      "尺度选择存在主观性",
      "专家判断可能不一致",
      "对专家资源依赖性强"
    ],
    implementationSteps: [
      "1. 构建层次结构模型",
      "2. 构建成对比较判断矩阵",
      "3. 计算权重向量（特征向量法）",
      "4. 进行一致性检验",
      "5. 计算组合权重"
    ],
    suitableScenarios: [
      "复杂多准则决策问题",
      "指标体系层次明确的评价",
      "管理科学、政策分析、工程评价"
    ],
    characteristics: {
      complexity: "高",
      timeCost: "高",
      dataRequirement: "低",
      expertDependency: "高",
      interpretability: "高",
      stability: "中",
      scalability: "低",
      implementationDifficulty: "高",
      cost: "高",
      softwareRequirement: "中"
    },
    // 新增四个维度属性
    dimensionalAttributes: {
      taskDimension: {
        domain: ["管理科学", "政策分析", "工程评价", "环境评价", "社会评价"],
        purpose: ["对多个选项进行排序/筛选", "评估单一对象的综合表现"],
        evaluationNature: ["描述性", "优化性"],
        complexity: ["中", "高"],
        applicationScope: ["内部管理", "外部报告", "学术研究"]
      },
      dataDimension: {
        indicatorCount: ["少", "中"],
        variableType: ["定量", "定性", "混合"],
        dataStructure: "多层次结构",
        dataQualityRequirement: "低",
        requiredDataTypes: ["专家的成对比较判断"]
      },
      userDimension: {
        precision: ["中", "高"],
        structure: "多层次",
        relation: "依赖",
        methodPreference: "主观",
        knowledgeLevel: ["中级", "高级"],
        riskTolerance: ["中", "高"],
        specialRequirements: ["高可解释性"]
      },
      environmentDimension: {
        expertiseLevel: "充足",
        timeConstraint: ["适中", "长期"],
        computingResource: ["有限", "充足"],
        environmentConstraints: []
      }
    },
    mathematicalModel: `
<div class="math-section">
<h4>🔢 AHP方法的数学模型</h4>

<div class="math-step">
<h5>1. 判断矩阵构造</h5>
<p>设有 $n$ 个评价指标，构造判断矩阵 $\\mathbf{A} = (a_{ij})_{n \\times n}$，其中 $a_{ij}$ 表示第 $i$ 个指标相对于第 $j$ 个指标的重要性比值。</p>

$$\\mathbf{A} = \\begin{pmatrix}
1 & a_{12} & a_{13} & \\cdots & a_{1n} \\\\
\\frac{1}{a_{12}} & 1 & a_{23} & \\cdots & a_{2n} \\\\
\\frac{1}{a_{13}} & \\frac{1}{a_{23}} & 1 & \\cdots & a_{3n} \\\\
\\vdots & \\vdots & \\vdots & \\ddots & \\vdots \\\\
\\frac{1}{a_{1n}} & \\frac{1}{a_{2n}} & \\frac{1}{a_{3n}} & \\cdots & 1
\\end{pmatrix}$$

<p class="math-constraint">约束条件：$a_{ij} > 0$，且 $a_{ii} = 1$，$a_{ji} = \\frac{1}{a_{ij}}$（互反性）</p>
</div>

<div class="math-step">
<h5>2. 特征值求解</h5>
<p>求解矩阵 $\\mathbf{A}$ 的最大特征值 $\\lambda_{\\text{max}}$ 和对应的特征向量 $\\mathbf{W}$：</p>
$$\\mathbf{A}\\mathbf{W} = \\lambda_{\\text{max}} \\mathbf{W}$$
</div>

<div class="math-step">
<h5>3. 权重计算</h5>
<p>对特征向量 $\\mathbf{W}$ 进行归一化处理，得到权重向量：</p>
$$\\mathbf{w} = (w_1, w_2, \\ldots, w_n)^T, \\quad \\text{其中} \\sum_{i=1}^{n} w_i = 1$$
</div>

<div class="math-step">
<h5>4. 一致性检验</h5>
<p>计算一致性指标和一致性比率：</p>
$$CI = \\frac{\\lambda_{\\text{max}} - n}{n - 1}$$
$$CR = \\frac{CI}{RI}$$
<p class="math-constraint">其中 $RI$ 为随机一致性指标，当 $CR < 0.1$ 时，认为判断矩阵的一致性可接受。</p>
</div>
</div>`,
    calculationExample: `
<div class="example-section">
<h4>🧮 AHP方法计算示例</h4>

<div class="example-problem">
<h5>问题设定</h5>
<p>假设有3个指标：<strong>经济效益(A)</strong>、<strong>社会效益(B)</strong>、<strong>环境效益(C)</strong>，专家判断得到判断矩阵：</p>

$$\\mathbf{A} = \\begin{pmatrix}
1 & 2 & 5 \\\\
\\frac{1}{2} & 1 & 3 \\\\
\\frac{1}{5} & \\frac{1}{3} & 1
\\end{pmatrix}$$
</div>

<div class="example-step">
<h5>步骤1: 计算每列和</h5>
<p>计算判断矩阵每一列的和：</p>
<ul class="calculation-list">
<li>第1列：$1 + \\frac{1}{2} + \\frac{1}{5} = 1.7$</li>
<li>第2列：$2 + 1 + \\frac{1}{3} = 3.33$</li>
<li>第3列：$5 + 3 + 1 = 9$</li>
</ul>
</div>

<div class="example-step">
<h5>步骤2: 矩阵归一化</h5>
<p>将每个元素除以对应列的和，得到归一化矩阵：</p>
$$\\mathbf{B} = \\begin{pmatrix}
0.588 & 0.600 & 0.556 \\\\
0.294 & 0.300 & 0.333 \\\\
0.118 & 0.100 & 0.111
\\end{pmatrix}$$
</div>

<div class="example-step">
<h5>步骤3: 计算权重向量</h5>
<p>计算每行的平均值，得到权重向量：</p>
<ul class="calculation-list">
<li>$w_1 = \\frac{0.588 + 0.600 + 0.556}{3} = 0.581$</li>
<li>$w_2 = \\frac{0.294 + 0.300 + 0.333}{3} = 0.309$</li>
<li>$w_3 = \\frac{0.118 + 0.100 + 0.111}{3} = 0.110$</li>
</ul>
</div>

<div class="example-step">
<h5>步骤4: 一致性检验</h5>
<p>计算最大特征值：$\\lambda_{\\text{max}} = 3.01$</p>
<p>计算一致性指标：</p>
$$CI = \\frac{\\lambda_{\\text{max}} - n}{n - 1} = \\frac{3.01 - 3}{3 - 1} = 0.005$$
<p>计算一致性比率：</p>
$$CR = \\frac{CI}{RI} = \\frac{0.005}{0.58} = 0.009 < 0.1$$
<p class="result-highlight">✅ 判断矩阵具有满意的一致性</p>
</div>

<div class="example-result">
<h5>🎯 最终结果</h5>
<p>权重向量为：$\\mathbf{w} = (0.581, 0.309, 0.110)^T$</p>
<div class="weight-visualization">
<div class="weight-item">
<span class="weight-label">经济效益</span>
<span class="weight-value">58.1%</span>
<div class="weight-bar" style="width: 58.1%"></div>
</div>
<div class="weight-item">
<span class="weight-label">社会效益</span>
<span class="weight-value">30.9%</span>
<div class="weight-bar" style="width: 30.9%"></div>
</div>
<div class="weight-item">
<span class="weight-label">环境效益</span>
<span class="weight-value">11.0%</span>
<div class="weight-bar" style="width: 11.0%"></div>
</div>
</div>
</div>
</div>`
  },
  {
    name: "德尔菲法",
    type: "主观赋权法",
    detail: "德尔菲法是一种通过多轮专家匿名反馈来达成共识的方法，通过反复征询专家意见，逐步收敛得到最终权重。",
    suitConditions: [
      "有足够的专家资源",
      "需要达成专家共识",
      "问题具有不确定性"
    ],
    advantages: [
      "避免面对面交流的偏见",
      "多轮反馈促进共识形成",
      "减少从众心理影响",
      "专家意见独立性强"
    ],
    limitations: [
      "耗时较长",
      "专家流失可能影响结果",
      "结果受专家选择影响大",
      "成本较高"
    ],
    implementationSteps: [
      "1. 选择专家组成员",
      "2. 设计第一轮问卷",
      "3. 收集并分析专家意见",
      "4. 反馈结果并再次征询",
      "5. 重复直到达成共识"
    ],
    suitableScenarios: [
      "缺乏历史数据的新兴领域",
      "需要专家共识的复杂评价",
      "技术预测、政策制定、风险评估"
    ],
    characteristics: {
      complexity: "中",
      timeCost: "高",
      dataRequirement: "低",
      expertDependency: "高",
      interpretability: "高",
      stability: "中",
      scalability: "中",
      implementationDifficulty: "中",
      cost: "高",
      softwareRequirement: "低"
    },
    // 新增四个维度属性
    dimensionalAttributes: {
      taskDimension: {
        domain: ["政策分析", "技术预测", "风险评估", "战略规划"],
        purpose: ["对多个选项进行排序/筛选", "建立预警或监测体系"],
        evaluationNature: ["描述性", "预测性"],
        complexity: ["中", "高"],
        applicationScope: ["内部管理", "外部报告", "学术研究"]
      },
      dataDimension: {
        indicatorCount: ["少", "中"],
        variableType: ["定性", "混合"],
        dataStructure: "单层或多层次均可",
        dataQualityRequirement: "低",
        requiredDataTypes: ["专家对指标重要性的评分"]
      },
      userDimension: {
        precision: ["中"],
        structure: ["单层", "多层次"],
        relation: ["依赖", "独立"],
        methodPreference: "主观",
        knowledgeLevel: ["初级", "中级", "高级"],
        riskTolerance: ["中"],
        specialRequirements: ["高可解释性"]
      },
      environmentDimension: {
        expertiseLevel: "充足",
        timeConstraint: "长期",
        computingResource: ["有限", "充足"],
        environmentConstraints: ["人力资源不足"]
      }
    },
    mathematicalModel: `德尔菲法的数学模型:

1. 计算专家评分的均值
   M_j = (Σw_ij) / n，i=1,2,...,n
   
   其中，w_ij为第i位专家对第j个指标的评分，
   n为专家数量，M_j为第j个指标的平均分

2. 计算标准差
   σ_j = √[Σ(w_ij - M_j)² / n]
   
   σ_j为第j个指标评分的标准差，用于衡量专家意见的一致性

3. 计算变异系数
   CV_j = σ_j / M_j
   
   CV_j为第j个指标的变异系数，通常当所有指标的CV值都小于某个阈值
   (如0.2)时，认为专家意见达成一致

4. 确定专家权重(可选)
   α_i = E_i / ΣE_i
   
   其中，E_i为第i位专家的专业水平评分，α_i为专家权重

5. 计算加权平均值(可选)
   M_j* = Σ(α_i × w_ij)
   
   M_j*为考虑专家权重后第j个指标的加权平均分

6. 计算最终权重
   W_j = M_j / ΣM_j 或 W_j = M_j* / ΣM_j*
   
   W_j为第j个指标的最终权重
`,
    calculationExample: `德尔菲法计算示例:

假设有5位专家对4个指标进行评分，评分范围为1-10分，数据如下：

第一轮评分：
| 专家 | 指标1 | 指标2 | 指标3 | 指标4 |
|-----|------|------|------|------|
| A   | 8    | 6    | 9    | 5    |
| B   | 7    | 5    | 8    | 6    |
| C   | 9    | 7    | 7    | 4    |
| D   | 6    | 6    | 9    | 7    |
| E   | 8    | 5    | 8    | 5    |

步骤1: 计算第一轮平均分和变异系数
M1 = (8+7+9+6+8)/5 = 7.6
M2 = (6+5+7+6+5)/5 = 5.8
M3 = (9+8+7+9+8)/5 = 8.2
M4 = (5+6+4+7+5)/5 = 5.4

σ1 = √[(8-7.6)²+(7-7.6)²+(9-7.6)²+(6-7.6)²+(8-7.6)²/5] = 1.14
σ2 = √[(6-5.8)²+(5-5.8)²+(7-5.8)²+(6-5.8)²+(5-5.8)²/5] = 0.84
σ3 = √[(9-8.2)²+(8-8.2)²+(7-8.2)²+(9-8.2)²+(8-8.2)²/5] = 0.84
σ4 = √[(5-5.4)²+(6-5.4)²+(4-5.4)²+(7-5.4)²+(5-5.4)²/5] = 1.14

CV1 = 1.14/7.6 = 0.15
CV2 = 0.84/5.8 = 0.14
CV3 = 0.84/8.2 = 0.10
CV4 = 1.14/5.4 = 0.21

由于CV4 > 0.2，需要进行第二轮评分。

第二轮评分（反馈第一轮结果后）：
| 专家 | 指标1 | 指标2 | 指标3 | 指标4 |
|-----|------|------|------|------|
| A   | 8    | 6    | 9    | 6    |
| B   | 7    | 6    | 8    | 5    |
| C   | 8    | 7    | 8    | 5    |
| D   | 7    | 6    | 9    | 6    |
| E   | 8    | 6    | 8    | 5    |

步骤2: 计算第二轮平均分和变异系数
M1 = 7.6
M2 = 6.2
M3 = 8.4
M4 = 5.4

σ1 = 0.55
σ2 = 0.45
σ3 = 0.55
σ4 = 0.55

CV1 = 0.07
CV2 = 0.07
CV3 = 0.07
CV4 = 0.10

步骤3: 所有CV < 0.2，专家意见达成一致，计算最终权重
总和: M1+M2+M3+M4 = 7.6+6.2+8.4+5.4 = 27.6
W1 = 7.6/27.6 = 0.275 (27.5%)
W2 = 6.2/27.6 = 0.225 (22.5%)
W3 = 8.4/27.6 = 0.304 (30.4%)
W4 = 5.4/27.6 = 0.196 (19.6%)

结论：经过两轮德尔菲法评估，四个指标的最终权重分别为27.5%、22.5%、30.4%和19.6%。
指标3获得最高权重，指标4获得最低权重。
`
  },
  {
    name: "专家评估法",
    type: "主观赋权法",
    detail: "专家评估法是一种直接由专家根据经验对指标重要性进行打分的方法，简单直接但主观性较强。",
    suitConditions: [
      "有领域专家参与",
      "定性指标较多",
      "缺乏客观数据"
    ],
    advantages: [
      "操作简单直接",
      "充分利用专家经验",
      "实施成本较低",
      "决策速度快"
    ],
    limitations: [
      "主观性强",
      "难以量化专家认知差异",
      "缺乏理论基础",
      "结果可能不稳定"
    ],
    implementationSteps: [
      "1. 选择评估专家",
      "2. 设计评分标准",
      "3. 专家独立评分",
      "4. 汇总分析结果",
      "5. 确定最终权重"
    ],
    suitableScenarios: [
      "定性指标较多的评价体系",
      "缺乏客观数据的情况",
      "社会科学、管理决策、安全评价"
    ]
  },
  {
    name: "直接赋权法",
    type: "主观赋权法",
    detail: "直接赋权法是一种由决策者直接给出各指标权重的方法，简单直观但缺乏理论支撑。",
    suitConditions: [
      "决策者经验丰富",
      "问题相对简单",
      "时间紧迫"
    ],
    advantages: [
      "简单易实施",
      "决策速度快",
      "概念直观",
      "操作成本低"
    ],
    limitations: [
      "缺乏理论支撑",
      "主观随意性大",
      "难以处理复杂问题",
      "结果可重复性差"
    ],
    implementationSteps: [
      "1. 确定评价指标",
      "2. 决策者直接赋权",
      "3. 归一化处理",
      "4. 验证权重合理性"
    ],
    suitableScenarios: [
      "简单评价问题",
      "紧急决策情境",
      "初步筛选阶段"
    ]
  },
  {
    name: "等权重法",
    type: "主观赋权法",
    detail: "等权重法是一种将所有指标赋予相同权重的方法，适用于指标重要性难以区分的情况。",
    suitConditions: [
      "指标重要性相近",
      "缺乏区分依据",
      "初步研究阶段"
    ],
    advantages: [
      "操作最简单",
      "无需复杂计算",
      "避免主观偏见",
      "结果稳定"
    ],
    limitations: [
      "忽略指标重要性差异",
      "可能导致不合理结果",
      "信息利用不充分",
      "适用场景有限"
    ],
    implementationSteps: [
      "1. 确定评价指标",
      "2. 赋予相同权重",
      "3. 计算综合得分"
    ],
    suitableScenarios: [
      "指标重要性难以区分时",
      "初步研究阶段",
      "指标数量少且相似性高的情况"
    ]
  },
  // 客观赋权法
  {
    name: "熵权法",
    type: "客观赋权法",
    detail: "熵权法基于信息熵理论，通过计算指标的信息熵来确定权重，信息量大（变异程度高）的指标获得较高权重。",
    suitConditions: [
      "有完整的指标评价数据",
      "指标间差异显著",
      "需要完全客观的权重"
    ],
    advantages: [
      "完全客观，无人为干预",
      "计算简便",
      "适用于多指标评价",
      "消除量纲影响"
    ],
    limitations: [
      "完全依赖数据分布",
      "忽略指标实际重要性",
      "可能与实际不符",
      "对异常值敏感"
    ],
    implementationSteps: [
      "1. 数据标准化",
      "2. 计算指标比重",
      "3. 计算信息熵",
      "4. 计算信息效用值",
      "5. 计算权重"
    ],
    suitableScenarios: [
      "需要客观评价的场景",
      "数据完整可靠",
      "经济评价、环境评价"
    ],
    characteristics: {
      complexity: "低",
      timeCost: "低",
      dataRequirement: "高",
      expertDependency: "无",
      interpretability: "中",
      stability: "中",
      scalability: "高",
      implementationDifficulty: "低",
      cost: "低",
      softwareRequirement: "低"
    },
    // 新增四个维度属性
    dimensionalAttributes: {
      taskDimension: {
        domain: ["经济评价", "环境评价", "性能评估", "效率分析"],
        purpose: ["评估单一对象的综合表现", "对多个选项进行排序/筛选"],
        evaluationNature: ["描述性"],
        complexity: ["低", "中"],
        applicationScope: ["学术研究", "内部管理"]
      },
      dataDimension: {
        indicatorCount: ["中", "大"],
        variableType: ["定量"],
        dataStructure: "单层结构",
        dataQualityRequirement: "高",
        requiredDataTypes: ["原始指标数据"]
      },
      userDimension: {
        precision: ["中", "高"],
        structure: "单层",
        relation: "独立",
        methodPreference: "客观",
        knowledgeLevel: ["初级", "中级"],
        riskTolerance: ["低", "中"],
        specialRequirements: ["避免主观干预"]
      },
      environmentDimension: {
        expertiseLevel: "无需专家",
        timeConstraint: ["短期", "适中"],
        computingResource: ["有限", "充足"],
        environmentConstraints: ["缺乏专家资源"]
      }
    },
    mathematicalModel: `熵权法的数学模型:

1. 数据标准化
   对于效益型指标（值越大越好）：
   rij = (xij - min(xj)) / (max(xj) - min(xj))
   
   对于成本型指标（值越小越好）：
   rij = (max(xj) - xij) / (max(xj) - min(xj))
   
   其中，xij为第i个评价对象第j个指标的原始值，
   rij为标准化后的值，范围为[0,1]

2. 计算指标比重
   pij = rij / Σrij，i=1,2,...,n
   
   其中，n为评价对象数量

3. 计算信息熵
   ej = -k * Σ(pij * ln(pij))，i=1,2,...,n
   
   其中，k = 1/ln(n)，当pij = 0时，定义pij * ln(pij) = 0

4. 计算信息效用值
   dj = 1 - ej
   
   dj为第j个指标的信息效用值

5. 计算权重
   wj = dj / Σdj，j=1,2,...,m
   
   wj为第j个指标的权重，m为指标数量
`,
    calculationExample: `熵权法计算示例:

假设有3个评价对象，4个评价指标的原始数据如下：

X = 
| 对象 | 指标1 | 指标2 | 指标3 | 指标4 |
|-----|------|------|------|------|
| A   | 0.4  | 0.3  | 0.5  | 0.7  |
| B   | 0.6  | 0.2  | 0.4  | 0.5  |
| C   | 0.8  | 0.4  | 0.6  | 0.3  |

步骤1: 数据标准化（假设都是效益型指标）
R = 
| 对象 | 指标1 | 指标2 | 指标3 | 指标4 |
|-----|------|------|------|------|
| A   | 0.0  | 0.5  | 0.5  | 1.0  |
| B   | 0.5  | 0.0  | 0.0  | 0.5  |
| C   | 1.0  | 1.0  | 1.0  | 0.0  |

步骤2: 计算指标比重
P = 
| 对象 | 指标1 | 指标2 | 指标3 | 指标4 |
|-----|------|------|------|------|
| A   | 0.0  | 0.33 | 0.33 | 0.67 |
| B   | 0.33 | 0.0  | 0.0  | 0.33 |
| C   | 0.67 | 0.67 | 0.67 | 0.0  |

步骤3: 计算信息熵
k = 1/ln(3) = 0.91
e1 = -0.91 * (0 + 0.33*ln(0.33) + 0.67*ln(0.67)) = 0.63
e2 = -0.91 * (0.33*ln(0.33) + 0 + 0.67*ln(0.67)) = 0.63
e3 = -0.91 * (0.33*ln(0.33) + 0 + 0.67*ln(0.67)) = 0.63
e4 = -0.91 * (0.67*ln(0.67) + 0.33*ln(0.33) + 0) = 0.63

步骤4: 计算信息效用值
d1 = 1 - 0.63 = 0.37
d2 = 1 - 0.63 = 0.37
d3 = 1 - 0.63 = 0.37
d4 = 1 - 0.63 = 0.37

步骤5: 计算权重
总和: d1 + d2 + d3 + d4 = 1.48
w1 = 0.37/1.48 = 0.25
w2 = 0.37/1.48 = 0.25
w3 = 0.37/1.48 = 0.25
w4 = 0.37/1.48 = 0.25

结论：在此例中，由于各指标的信息熵相同，所以各指标获得了相同的权重。
在实际应用中，不同指标的信息熵通常会有差异，导致权重不同。
`
  },
  {
    name: "变异系数法",
    type: "客观赋权法",
    detail: "变异系数法基于统计学中的变异系数（标准差与均值的比值）来确定权重，变异系数越大表示指标区分能力越强，权重越大。",
    suitConditions: [
      "有完整的指标评价数据",
      "指标间差异显著",
      "需要考虑指标的区分能力"
    ],
    advantages: [
      "计算简单",
      "消除量纲影响",
      "客观反映指标区分能力",
      "不需要专家判断"
    ],
    limitations: [
      "仅适用于定量指标",
      "对异常值敏感",
      "忽略指标间相关性",
      "完全依赖数据分布"
    ],
    implementationSteps: [
      "1. 计算各指标的标准差",
      "2. 计算各指标的均值",
      "3. 计算变异系数",
      "4. 归一化得到权重"
    ],
    suitableScenarios: [
      "定量指标评价",
      "对指标区分能力要求高的情况",
      "经济统计、社会调查分析"
    ],
    characteristics: {
      complexity: "低",
      timeCost: "低",
      dataRequirement: "中",
      expertDependency: "低",
      interpretability: "高",
      stability: "中",
      scalability: "高",
      implementationDifficulty: "低",
      cost: "低",
      softwareRequirement: "低"
    },
    // 新增四个维度属性
    dimensionalAttributes: {
      taskDimension: {
        domain: ["经济统计", "社会调查", "性能评估", "质量控制"],
        purpose: ["对多个选项进行排序/筛选", "评估单一对象的综合表现"],
        evaluationNature: ["描述性", "比较性"],
        complexity: ["低", "中"],
        applicationScope: ["学术研究", "内部管理"]
      },
      dataDimension: {
        indicatorCount: ["少", "中"],
        variableType: ["定量"],
        dataStructure: "单层结构",
        dataQualityRequirement: "中",
        requiredDataTypes: ["原始指标数据"]
      },
      userDimension: {
        precision: ["中"],
        structure: "单层",
        relation: "独立",
        methodPreference: "客观",
        knowledgeLevel: ["初级", "中级"],
        riskTolerance: ["中"],
        specialRequirements: ["强调指标区分能力"]
      },
      environmentDimension: {
        expertiseLevel: "无需专家",
        timeConstraint: ["短期", "适中"],
        computingResource: ["有限", "充足"],
        environmentConstraints: ["缺乏专家资源"]
      }
    },
    mathematicalModel: `变异系数法的数学模型:

1. 计算标准差
   σj = √(Σ(xij - x̄j)² / n)，i=1,2,...,n
   
   其中，xij为第i个样本的第j个指标值，
   x̄j为第j个指标的均值，n为样本数量

2. 计算均值
   x̄j = Σxij / n，i=1,2,...,n

3. 计算变异系数
   Vj = σj / x̄j，j=1,2,...,m
   
   其中，Vj为第j个指标的变异系数

4. 计算权重
   wj = Vj / ΣVj，j=1,2,...,m
   
   wj为第j个指标的权重
`,
    calculationExample: `变异系数法计算示例:

假设有5个区域的3个经济指标数据如下：

X = 
| 地区  | GDP(亿元) | 人均收入(万元) | 就业率(%) |
|------|----------|--------------|---------|
| A    | 1200     | 5.6          | 92      |
| B    | 980      | 4.8          | 88      |
| C    | 1500     | 6.2          | 95      |
| D    | 800      | 4.2          | 87      |
| E    | 1350     | 5.8          | 91      |

步骤1: 计算各指标的均值
x̄1 = (1200+980+1500+800+1350)/5 = 1166
x̄2 = (5.6+4.8+6.2+4.2+5.8)/5 = 5.32
x̄3 = (92+88+95+87+91)/5 = 90.6

步骤2: 计算各指标的标准差
σ1 = √[(1200-1166)²+(980-1166)²+(1500-1166)²+(800-1166)²+(1350-1166)²/5] ≈ 277.32
σ2 = √[(5.6-5.32)²+(4.8-5.32)²+(6.2-5.32)²+(4.2-5.32)²+(5.8-5.32)²/5] ≈ 0.78
σ3 = √[(92-90.6)²+(88-90.6)²+(95-90.6)²+(87-90.6)²+(91-90.6)²/5] ≈ 3.05

步骤3: 计算各指标的变异系数
V1 = 277.32/1166 = 0.238
V2 = 0.78/5.32 = 0.147
V3 = 3.05/90.6 = 0.034

步骤4: 计算权重
总和: V1+V2+V3 = 0.238+0.147+0.034 = 0.419
w1 = 0.238/0.419 = 0.568 (56.8%)
w2 = 0.147/0.419 = 0.351 (35.1%)
w3 = 0.034/0.419 = 0.081 (8.1%)

结论：根据变异系数法，三个指标的权重分别为56.8%、35.1%和8.1%。
GDP的变异系数最大，说明各地区在这一指标上差异最显著，因此获得最高权重。
就业率的变异系数最小，说明各地区在这一指标上较为接近，因此获得最低权重。
`
  },
  {
    name: "CRITIC法",
    type: "客观赋权法",
    detail: "CRITIC(CRiteria Importance Through Intercriteria Correlation)方法通过同时考虑指标的变异性和相关性来确定权重，避免了信息重叠。",
    suitConditions: [
      "有完整的指标评价数据",
      "指标间存在相关性",
      "需要考虑指标提供的独立信息量"
    ],
    advantages: [
      "同时考虑指标的标准差和相关系数",
      "避免信息重叠计算",
      "适合处理指标间有相关性的场景",
      "结果客观可重复"
    ],
    limitations: [
      "计算过程相对复杂",
      "完全依赖数据，忽略实际语义重要性",
      "对数据质量要求高",
      "结果解释性不强"
    ],
    implementationSteps: [
      "1. 对原始数据进行标准化处理",
      "2. 计算各指标的标准差",
      "3. 计算指标间的相关系数矩阵",
      "4. 计算各指标的冲突度",
      "5. 计算各指标的信息量",
      "6. 归一化得到权重"
    ],
    suitableScenarios: [
      "指标间存在明显相关性的评价系统",
      "需要避免信息重叠计算",
      "数据完整可靠的客观评价"
    ],
    characteristics: {
      complexity: "中",
      timeCost: "中",
      dataRequirement: "高",
      expertDependency: "低",
      interpretability: "中",
      stability: "高",
      scalability: "高",
      implementationDifficulty: "中",
      cost: "低",
      softwareRequirement: "中"
    },
    // 新增四个维度属性
    dimensionalAttributes: {
      taskDimension: {
        domain: ["经济评价", "金融分析", "性能评估", "多指标决策"],
        purpose: ["对多个选项进行排序/筛选", "评估单一对象的综合表现"],
        evaluationNature: ["描述性", "分析性"],
        complexity: ["中", "高"],
        applicationScope: ["学术研究", "企业决策", "内部管理"]
      },
      dataDimension: {
        indicatorCount: ["中", "大"],
        variableType: ["定量"],
        dataStructure: "单层或多层次均可",
        dataQualityRequirement: "高",
        requiredDataTypes: ["原始指标数据", "相关性数据"]
      },
      userDimension: {
        precision: ["中", "高"],
        structure: ["单层", "多层次"],
        relation: "相关",
        methodPreference: "客观",
        knowledgeLevel: ["中级", "高级"],
        riskTolerance: ["中"],
        specialRequirements: ["处理高度相关指标"]
      },
      environmentDimension: {
        expertiseLevel: "低",
        timeConstraint: ["适中"],
        computingResource: ["充足"],
        environmentConstraints: ["数据质量要求高"]
      }
    },
    mathematicalModel: `CRITIC法的数学模型:

1. 数据标准化
   对于效益型指标（值越大越好）：
   zij = (xij - min(xj)) / (max(xj) - min(xj))
   
   对于成本型指标（值越小越好）：
   zij = (max(xj) - xij) / (max(xj) - min(xj))
   
   其中，xij为第i个评价对象第j个指标的原始值，
   zij为标准化后的值，范围为[0,1]

2. 计算标准差
   σj = √(Σ(zij - z̄j)² / n)
   
   其中，z̄j为标准化后第j个指标的均值

3. 计算相关系数矩阵
   R = [rjk]m×m
   
   其中，rjk为指标j与指标k的相关系数，
   rjk = Σ(zij - z̄j)(zik - z̄k) / √[Σ(zij - z̄j)²·Σ(zik - z̄k)²]

4. 计算冲突度
   Cj = Σ(1 - rjk)，k=1,2,...,m
   
   其中，Cj为第j个指标与其他指标的冲突度总和

5. 计算信息量
   INFj = σj × Cj
   
   其中，INFj为第j个指标的信息量

6. 计算权重
   wj = INFj / ΣINFj，j=1,2,...,m
   
   wj为第j个指标的权重
`,
    calculationExample: `CRITIC法计算示例:

假设有4个企业的3个财务指标数据如下：

X = 
| 企业  | 利润率(%) | 资产周转率 | 负债率(%) |
|------|----------|----------|----------|
| A    | 15       | 1.2      | 45       |
| B    | 12       | 0.9      | 60       |
| C    | 18       | 1.5      | 35       |
| D    | 10       | 0.8      | 55       |

注：利润率和资产周转率为效益型指标，负债率为成本型指标。

步骤1: 数据标准化
Z = 
| 企业  | 利润率   | 资产周转率 | 负债率   |
|------|---------|----------|---------|
| A    | 0.625   | 0.571    | 0.600   |
| B    | 0.250   | 0.143    | 0.000   |
| C    | 1.000   | 1.000    | 1.000   |
| D    | 0.000   | 0.000    | 0.200   |

步骤2: 计算标准差
σ1 = 0.429
σ2 = 0.437
σ3 = 0.436

步骤3: 计算相关系数矩阵
R = 
| 1.000  0.997  0.763 |
| 0.997  1.000  0.790 |
| 0.763  0.790  1.000 |

步骤4: 计算冲突度
C1 = (1-1.000) + (1-0.997) + (1-0.763) = 0.240
C2 = (1-0.997) + (1-1.000) + (1-0.790) = 0.213
C3 = (1-0.763) + (1-0.790) + (1-1.000) = 0.447

步骤5: 计算信息量
INF1 = 0.429 × 0.240 = 0.103
INF2 = 0.437 × 0.213 = 0.093
INF3 = 0.436 × 0.447 = 0.195

步骤6: 计算权重
总和: INF1 + INF2 + INF3 = 0.391
w1 = 0.103/0.391 = 0.264 (26.4%)
w2 = 0.093/0.391 = 0.238 (23.8%)
w3 = 0.195/0.391 = 0.499 (49.9%)

结论：负债率获得了最高权重，这是因为它与其他指标的相关性较低(冲突度高)，
提供了更多的独立信息。而利润率和资产周转率由于高度相关，信息有一定重叠，
因此权重相对较低。
`
  },
  {
    name: "主成分分析法",
    type: "客观赋权法",
    detail: "主成分分析法通过降维技术，将多个相关指标转化为少数几个不相关的主成分，用主成分的贡献率作为权重。",
    suitConditions: [
      "指标间存在相关性",
      "样本量充足",
      "需要降维处理"
    ],
    advantages: [
      "可处理多重共线性",
      "降维保留主要信息",
      "减少冗余",
      "结果客观"
    ],
    limitations: [
      "主成分物理意义不明确",
      "计算较复杂",
      "对数据分布有要求",
      "需要专业知识解释"
    ],
    implementationSteps: [
      "1. 数据标准化",
      "2. 计算相关系数矩阵",
      "3. 计算特征值和特征向量",
      "4. 确定主成分个数",
      "5. 计算主成分得分",
      "6. 计算权重"
    ],
    suitableScenarios: [
      "高维数据分析",
      "指标间高度相关",
      "需要降维的复杂评价"
    ],
    characteristics: {
      complexity: "高",
      timeCost: "中",
      dataRequirement: "高",
      expertDependency: "低",
      interpretability: "低",
      stability: "高",
      scalability: "高",
      implementationDifficulty: "高",
      cost: "中",
      softwareRequirement: "高"
    },
    // 新增四个维度属性
    dimensionalAttributes: {
      taskDimension: {
        domain: ["经济评价", "社会发展", "科技创新", "多维度评估"],
        purpose: ["降维分析", "消除指标冗余", "评估单一对象的综合表现"],
        evaluationNature: ["描述性", "分析性"],
        complexity: ["中", "高"],
        applicationScope: ["学术研究", "政府决策", "企业管理"]
      },
      dataDimension: {
        indicatorCount: ["中", "大"],
        variableType: ["定量"],
        dataStructure: "高维数据结构",
        dataQualityRequirement: "高",
        requiredDataTypes: ["原始指标数据", "相关性数据"]
      },
      userDimension: {
        precision: ["中", "高"],
        structure: ["多层次", "复杂"],
        relation: "高度相关",
        methodPreference: "客观",
        knowledgeLevel: ["高级"],
        riskTolerance: ["中", "高"],
        specialRequirements: ["处理高维数据", "消除多重共线性"]
      },
      environmentDimension: {
        expertiseLevel: "中等",
        timeConstraint: ["适中"],
        computingResource: ["充足", "高级"],
        environmentConstraints: ["需要统计软件支持"]
      }
    },
    mathematicalModel: `主成分分析法的数学模型:

1. 数据标准化
   z_ij = (x_ij - x̄_j) / s_j
   
   其中，x_ij为第i个样本第j个指标的原始值，
   x̄_j为第j个指标的均值，s_j为第j个指标的标准差

2. 计算相关系数矩阵
   R = [r_jk]m×m
   
   其中，r_jk为指标j与指标k的相关系数

3. 求解特征方程
   |R - λI| = 0
   
   求解特征值λ_1 ≥ λ_2 ≥ ... ≥ λ_m ≥ 0
   及对应的特征向量u_1, u_2, ..., u_m

4. 构造主成分
   F_i = u_i1z_1 + u_i2z_2 + ... + u_imz_m，i=1,2,...,m
   
   其中，F_i为第i个主成分，u_ij为第i个特征向量的第j个分量

5. 计算贡献率
   η_i = λ_i / Σλ_j，j=1,2,...,m
   
   η_i为第i个主成分的贡献率

6. 确定主成分个数
   选择使累积贡献率达到预设阈值(如85%)的前p个主成分：
   Ση_i ≥ 85%，i=1,2,...,p

7. 计算各指标权重
   w_j = Σ|u_ij|×λ_i / Σλ_i，i=1,2,...,p
   
   w_j为第j个指标的权重
`,
    calculationExample: `主成分分析法计算示例:

假设有5个城市，用4个经济指标进行评价，原始数据如下：

X = 
| 城市 | GDP(亿元) | 财政收入(亿元) | 固定资产投资(亿元) | 社会消费品零售总额(亿元) |
|-----|----------|--------------|-----------------|----------------------|
| A   | 1200     | 180          | 650             | 430                  |
| B   | 850      | 120          | 480             | 320                  |
| C   | 1500     | 230          | 820             | 560                  |
| D   | 980      | 150          | 520             | 370                  |
| E   | 1100     | 160          | 600             | 400                  |

步骤1: 数据标准化
计算均值和标准差：
x̄_1 = 1126, s_1 = 240.9
x̄_2 = 168, s_2 = 41.5
x̄_3 = 614, s_3 = 131.0
x̄_4 = 416, s_4 = 90.4

标准化后的数据矩阵Z：
| 城市 | 指标1 | 指标2 | 指标3 | 指标4 |
|-----|------|------|------|------|
| A   | 0.31 | 0.29 | 0.27 | 0.15 |
| B   | -1.15| -1.16| -1.02| -1.06|
| C   | 1.55 | 1.49 | 1.57 | 1.59 |
| D   | -0.60| -0.43| -0.72| -0.51|
| E   | -0.11| -0.19| -0.11| -0.18|

步骤2: 计算相关系数矩阵
R = 
| 1.00 0.99 0.99 0.99 |
| 0.99 1.00 0.99 0.99 |
| 0.99 0.99 1.00 0.99 |
| 0.99 0.99 0.99 1.00 |

步骤3: 计算特征值和特征向量
特征值：
λ_1 = 3.960
λ_2 = 0.020
λ_3 = 0.016
λ_4 = 0.004

对应特征向量：
u_1 = (0.500, 0.500, 0.500, 0.500)
u_2 = (0.672, -0.220, -0.566, 0.426)
u_3 = (-0.016, -0.831, 0.350, 0.432)
u_4 = (0.547, -0.056, 0.553, -0.627)

步骤4: 计算贡献率
η_1 = 3.960 / 4 = 0.990 (99.0%)
η_2 = 0.020 / 4 = 0.005 (0.5%)
η_3 = 0.016 / 4 = 0.004 (0.4%)
η_4 = 0.004 / 4 = 0.001 (0.1%)

步骤5: 确定主成分个数
由于第一个主成分的贡献率已达99.0%，超过85%阈值，因此只选择第一个主成分。

步骤6: 计算各指标权重
由于只有一个主成分，使用特征向量的绝对值作为权重：
总和：|0.500|+|0.500|+|0.500|+|0.500| = 2.000
w_1 = 0.500/2.000 = 0.250 (25.0%)
w_2 = 0.500/2.000 = 0.250 (25.0%)
w_3 = 0.500/2.000 = 0.250 (25.0%)
w_4 = 0.500/2.000 = 0.250 (25.0%)

结论：在本例中，四个经济指标的权重均为25%。这是因为这些指标高度相关（相关系数接近1），
主成分分析认为它们提供的信息量相近，因此应分配相等权重。
在实际应用中，指标间相关性通常不会如此高，权重分配会更加差异化。
`
  },
  {
    name: "因子分析法",
    type: "客观赋权法",
    detail: "因子分析法通过分析变量间的相关关系，将众多变量归结为少数几个不可观测的潜在因子，并基于因子载荷确定权重。",
    suitConditions: [
      "指标间存在相关性",
      "样本量充足",
      "存在潜在因素"
    ],
    advantages: [
      "揭示潜在因素结构",
      "减少指标数量",
      "考虑指标相关性",
      "结果客观"
    ],
    limitations: [
      "因子解释有主观性",
      "计算复杂",
      "需要专业知识",
      "模型假设较强"
    ],
    implementationSteps: [
      "1. 数据标准化",
      "2. 计算相关系数矩阵",
      "3. 提取因子",
      "4. 因子旋转",
      "5. 计算因子得分",
      "6. 确定权重"
    ],
    suitableScenarios: [
      "指标系统复杂的评价",
      "存在潜在结构的数据分析",
      "心理测量、市场研究、社会调查"
    ],
    // 新增四个维度属性
    dimensionalAttributes: {
      taskDimension: {
        domain: ["心理测量", "市场研究", "社会调查", "多维度评估"],
        purpose: ["揭示潜在结构", "降维分析", "评估单一对象的综合表现"],
        evaluationNature: ["描述性", "解释性", "分析性"],
        complexity: ["中", "高"],
        applicationScope: ["学术研究", "企业决策", "社会科学"]
      },
      dataDimension: {
        indicatorCount: ["中", "大"],
        variableType: ["定量", "定序"],
        dataStructure: "潜在结构",
        dataQualityRequirement: "高",
        requiredDataTypes: ["原始指标数据", "相关性数据"]
      },
      userDimension: {
        precision: ["中", "高"],
        structure: ["多层次", "潜在结构"],
        relation: "高度相关",
        methodPreference: "客观",
        knowledgeLevel: ["高级"],
        riskTolerance: ["中", "高"],
        specialRequirements: ["揭示潜在结构", "解释复杂关系"]
      },
      environmentDimension: {
        expertiseLevel: "高",
        timeConstraint: ["适中", "长期"],
        computingResource: ["充足", "高级"],
        environmentConstraints: ["需要专业统计软件", "需要专业知识解释"]
      }
    },
    mathematicalModel: `因子分析法的数学模型:

1. 标准化原始数据
   Z = (X - μ) / σ
   
   其中，X为原始数据矩阵，μ为均值向量，σ为标准差向量

2. 建立因子模型
   Z = AF + ε
   
   其中，Z是标准化后的观测变量向量，A是因子载荷矩阵，
   F是共同因子向量，ε是特殊因子向量

3. 计算相关系数矩阵
   R = (1/n) * Z'Z
   
   其中，n为样本数量，Z'为Z的转置矩阵

4. 求解特征方程
   |R - λI| = 0
   
   计算特征值λ₁ ≥ λ₂ ≥ ... ≥ λₚ和对应的特征向量

5. 确定因子数量
   基于以下准则之一选择m个因子:
   - 特征值大于1的因子
   - 累积贡献率达到指定阈值(如85%)的因子
   - 碎石图观察

6. 计算因子载荷矩阵
   A = [a₁, a₂, ..., aₘ]
   
   其中，aᵢ = √λᵢ * vᵢ，vᵢ为对应特征值λᵢ的单位特征向量

7. 因子旋转(可选)
   通过旋转获得更易解释的因子结构，常用方法有:
   - 正交旋转(如Varimax)
   - 斜交旋转(如Promax)

8. 计算权重
   wⱼ = Σ(|aᵢⱼ| * λᵢ / Σλᵢ)，i=1,2,...,m
   
   其中，aᵢⱼ为第j个变量在第i个因子上的载荷，
   λᵢ为第i个因子的特征值，wⱼ为第j个指标的权重
`,
    calculationExample: `因子分析法计算示例:

假设有6个评价指标，10个评价对象的标准化数据Z，计算相关系数矩阵R:

R = 
| 1.00  0.75  0.68  0.12  0.23  0.15 |
| 0.75  1.00  0.72  0.18  0.26  0.20 |
| 0.68  0.72  1.00  0.21  0.24  0.22 |
| 0.12  0.18  0.21  1.00  0.65  0.58 |
| 0.23  0.26  0.24  0.65  1.00  0.62 |
| 0.15  0.20  0.22  0.58  0.62  1.00 |

步骤1: 求解特征值和特征向量
特征值:
λ₁ = 2.62
λ₂ = 1.88
λ₃ = 0.56
λ₄ = 0.42
λ₅ = 0.31
λ₆ = 0.21

特征值贡献率:
η₁ = 2.62/6 = 0.437 (43.7%)
η₂ = 1.88/6 = 0.313 (31.3%)

累积贡献率 = 43.7% + 31.3% = 75.0%

步骤2: 确定因子数量
根据特征值>1的标准，选择2个因子，累积方差贡献率为75.0%

步骤3: 计算初始因子载荷矩阵
A = 
|       因子1   因子2 |
| 指标1  0.84    0.19 |
| 指标2  0.86    0.25 |
| 指标3  0.82    0.27 |
| 指标4  0.26    0.78 |
| 指标5  0.35    0.81 |
| 指标6  0.30    0.76 |

步骤4: Varimax旋转后的因子载荷矩阵
A* = 
|       因子1   因子2 |
| 指标1  0.86    0.06 |
| 指标2  0.89    0.12 |
| 指标3  0.85    0.15 |
| 指标4  0.10    0.82 |
| 指标5  0.18    0.87 |
| 指标6  0.14    0.81 |

步骤5: 计算各指标权重
w₁ = (|0.86|×2.62 + |0.06|×1.88) / (2.62+1.88) = 0.57
w₂ = (|0.89|×2.62 + |0.12|×1.88) / (2.62+1.88) = 0.62
w₃ = (|0.85|×2.62 + |0.15|×1.88) / (2.62+1.88) = 0.60
w₄ = (|0.10|×2.62 + |0.82|×1.88) / (2.62+1.88) = 0.34
w₅ = (|0.18|×2.62 + |0.87|×1.88) / (2.62+1.88) = 0.42
w₆ = (|0.14|×2.62 + |0.81|×1.88) / (2.62+1.88) = 0.37

步骤6: 归一化处理
总和: 0.57+0.62+0.60+0.34+0.42+0.37 = 2.92
w₁ = 0.57/2.92 = 0.195 (19.5%)
w₂ = 0.62/2.92 = 0.212 (21.2%)
w₃ = 0.60/2.92 = 0.205 (20.5%)
w₄ = 0.34/2.92 = 0.116 (11.6%)
w₅ = 0.42/2.92 = 0.144 (14.4%)
w₆ = 0.37/2.92 = 0.127 (12.7%)

可以看出，指标1、2、3的权重较高，它们主要被因子1解释；
指标4、5、6的权重较低，它们主要被因子2解释。
`
  },
  {
    name: "灰色关联分析法",
    type: "客观赋权法",
    detail: "灰色关联分析法通过计算各指标与参考序列的关联度来确定权重，适用于小样本和不确定系统。",
    suitConditions: [
      "样本量小",
      "数据不完整",
      "系统具有不确定性"
    ],
    advantages: [
      "适用于小样本",
      "对数据分布无严格要求",
      "计算相对简便",
      "结果直观"
    ],
    limitations: [
      "参考序列选择有主观性",
      "关联度受尺度影响",
      "理论深度不足",
      "结果可能不稳定"
    ],
    implementationSteps: [
      "1. 确定参考序列",
      "2. 数据标准化",
      "3. 计算关联系数",
      "4. 计算关联度",
      "5. 确定权重"
    ],
    suitableScenarios: [
      "数据不完整的系统",
      "样本量小的情况",
      "工程评价、环境质量评价"
    ],
    // 新增四个维度属性
    dimensionalAttributes: {
      taskDimension: {
        domain: ["工程评价", "环境质量评价", "系统分析", "预测决策"],
        purpose: ["处理不确定性", "小样本分析", "评估单一对象的综合表现"],
        evaluationNature: ["描述性", "预测性"],
        complexity: ["中", "高"],
        applicationScope: ["工程应用", "环境监测", "学术研究"]
      },
      dataDimension: {
        indicatorCount: ["少", "中"],
        variableType: ["定量", "混合"],
        dataStructure: "序列数据",
        dataQualityRequirement: "低",
        requiredDataTypes: ["时间序列数据", "不完整数据"]
      },
      userDimension: {
        precision: ["低", "中"],
        structure: ["单层", "多层次"],
        relation: "不确定",
        methodPreference: "客观",
        knowledgeLevel: ["中级", "高级"],
        riskTolerance: ["高"],
        specialRequirements: ["处理不确定性", "小样本分析"]
      },
      environmentDimension: {
        expertiseLevel: "中等",
        timeConstraint: ["短期", "适中"],
        computingResource: ["有限", "充足"],
        environmentConstraints: ["数据不完整", "信息不充分"]
      }
    },
    mathematicalModel: `灰色关联分析法的数学模型:

1. 确定参考序列和比较序列
   参考序列 X₀ = {x₀(1), x₀(2), ..., x₀(n)}
   比较序列 Xᵢ = {xᵢ(1), xᵢ(2), ..., xᵢ(n)}，i=1,2,...,m
   
   其中，n为指标数量，m为样本数量

2. 数据标准化
   对于效益型指标（值越大越好）：
   yᵢ(j) = (xᵢ(j) - min xᵢ(j)) / (max xᵢ(j) - min xᵢ(j))
   
   对于成本型指标（值越小越好）：
   yᵢ(j) = (max xᵢ(j) - xᵢ(j)) / (max xᵢ(j) - min xᵢ(j))
   
   其中，yᵢ(j)为标准化后的值

3. 计算关联系数
   ξᵢ(j) = (Δmin + ρΔmax) / (Δᵢ(j) + ρΔmax)
   
   其中，Δᵢ(j) = |y₀(j) - yᵢ(j)|
   Δmin = min min |y₀(j) - yᵢ(j)|
          i   j
   Δmax = max max |y₀(j) - yᵢ(j)|
          i   j
   ρ为分辨系数，通常取0.5

4. 计算关联度
   rᵢ = (1/n) * Σξᵢ(j)，j=1,2,...,n
   
   rᵢ为第i个比较序列与参考序列的关联度

5. 计算权重
   wᵢ = rᵢ / Σrᵢ，i=1,2,...,m
   
   wᵢ为第i个指标的权重
`,
    calculationExample: `灰色关联分析法计算示例:

假设有3个企业，评价指标包括利润率、市场份额和研发投入，原始数据如下：

X = 
| 企业 | 利润率(%) | 市场份额(%) | 研发投入(万元) |
|-----|----------|-----------|--------------|
| A   | 12       | 25        | 800          |
| B   | 15       | 18        | 600          |
| C   | 10       | 30        | 900          |

步骤1: 确定参考序列
采用最优值作为参考序列，对于三个指标（都为效益型）：
X₀ = {15, 30, 900}

步骤2: 数据标准化
Y = 
| 企业 | 利润率 | 市场份额 | 研发投入 |
|-----|-------|---------|---------|
| A   | 0.4   | 0.583   | 0.667   |
| B   | 1.0   | 0.0     | 0.0     |
| C   | 0.0   | 1.0     | 1.0     |
参考序列Y₀ = {1.0, 1.0, 1.0}

步骤3: 计算关联系数(ρ=0.5)
Δmin = 0.0
Δmax = 1.0

企业A:
ΔA(1) = |1.0 - 0.4| = 0.6
ΔA(2) = |1.0 - 0.583| = 0.417
ΔA(3) = |1.0 - 0.667| = 0.333
ξA(1) = (0.0 + 0.5*1.0) / (0.6 + 0.5*1.0) = 0.455
ξA(2) = (0.0 + 0.5*1.0) / (0.417 + 0.5*1.0) = 0.545
ξA(3) = (0.0 + 0.5*1.0) / (0.333 + 0.5*1.0) = 0.600

企业B:
ΔB(1) = |1.0 - 1.0| = 0.0
ΔB(2) = |1.0 - 0.0| = 1.0
ΔB(3) = |1.0 - 0.0| = 1.0
ξB(1) = (0.0 + 0.5*1.0) / (0.0 + 0.5*1.0) = 1.000
ξB(2) = (0.0 + 0.5*1.0) / (1.0 + 0.5*1.0) = 0.333
ξB(3) = (0.0 + 0.5*1.0) / (1.0 + 0.5*1.0) = 0.333

企业C:
ΔC(1) = |1.0 - 0.0| = 1.0
ΔC(2) = |1.0 - 1.0| = 0.0
ΔC(3) = |1.0 - 1.0| = 0.0
ξC(1) = (0.0 + 0.5*1.0) / (1.0 + 0.5*1.0) = 0.333
ξC(2) = (0.0 + 0.5*1.0) / (0.0 + 0.5*1.0) = 1.000
ξC(3) = (0.0 + 0.5*1.0) / (0.0 + 0.5*1.0) = 1.000

步骤4: 计算关联度
rA = (0.455 + 0.545 + 0.600) / 3 = 0.533
rB = (1.000 + 0.333 + 0.333) / 3 = 0.555
rC = (0.333 + 1.000 + 1.000) / 3 = 0.778

步骤5: 计算权重
总和: rA + rB + rC = 0.533 + 0.555 + 0.778 = 1.866
wA = 0.533 / 1.866 = 0.286 (28.6%)
wB = 0.555 / 1.866 = 0.297 (29.7%)
wC = 0.778 / 1.866 = 0.417 (41.7%)

结论：根据灰色关联分析法，三个指标的权重分别为28.6%、29.7%和41.7%。
研发投入指标获得最高权重，说明该指标对评价结果影响最大。
`
  },
  {
    name: "DEA法",
    type: "客观赋权法",
    detail: "数据包络分析(DEA)通过线性规划为每个决策单元寻找最优权重，适用于多输入多输出系统的效率评价。",
    suitConditions: [
      "多输入多输出系统",
      "需要评价效率",
      "决策单元数量适中"
    ],
    advantages: [
      "无需预先确定权重",
      "为每个评价单元寻找最有利权重",
      "适用于多输入多输出",
      "结果客观"
    ],
    limitations: [
      "对极端值敏感",
      "难以进行横向比较",
      "决策单元数量限制",
      "计算复杂"
    ],
    implementationSteps: [
      "1. 确定输入输出指标",
      "2. 选择DEA模型",
      "3. 构建线性规划模型",
      "4. 求解最优权重",
      "5. 计算效率值"
    ],
    suitableScenarios: [
      "效率评价",
      "多投入多产出系统",
      "公共部门绩效、银行效率评价"
    ],
    mathematicalModel: `DEA法的数学模型:

1. 基本CCR模型
   假设有n个决策单元(DMU)，每个DMU有m个输入和s个输出。
   对于第j个DMU，其输入向量为Xⱼ = (x₁ⱼ, x₂ⱼ, ..., xₘⱼ)'，
   输出向量为Yⱼ = (y₁ⱼ, y₂ⱼ, ..., yₛⱼ)'。

2. 效率评价模型
   对于第k个DMU的效率评价:
   
   max h_k = Σ(uᵣyᵣₖ) / Σ(vᵢxᵢₖ)
          r=1      i=1
   
   s.t. Σ(uᵣyᵣⱼ) / Σ(vᵢxᵢⱼ) ≤ 1,  j=1,2,...,n
        r=1      i=1
        
        uᵣ ≥ 0,  r=1,2,...,s
        vᵢ ≥ 0,  i=1,2,...,m
   
   其中，uᵣ和vᵢ分别为输出和输入的权重。

3. 线性化转换
   通过Charnes-Cooper变换将分数规划转换为线性规划:
   
   max h_k = Σ μᵣyᵣₖ
            r=1
   
   s.t. Σ ωᵢxᵢₖ = 1
        i=1
        
        Σ μᵣyᵣⱼ - Σ ωᵢxᵢⱼ ≤ 0,  j=1,2,...,n
        r=1       i=1
        
        μᵣ ≥ 0,  r=1,2,...,s
        ωᵢ ≥ 0,  i=1,2,...,m
   
   其中，μᵣ = tuᵣ, ωᵢ = tvᵢ, t = 1 / Σ(vᵢxᵢₖ)
                                    i=1

4. 权重计算
   解线性规划得到最优解μᵣ*和ωᵢ*，
   可计算第k个DMU的各输入输出指标权重:
   
   输出权重: wᵣ = μᵣ* / Σ μᵣ*
                    r=1
   
   输入权重: wᵢ = ωᵢ* / Σ ωᵢ*
                    i=1
`,
    calculationExample: `DEA法计算示例:

假设有4个决策单元(DMU)，每个DMU有2个输入(x₁, x₂)和2个输出(y₁, y₂)，数据如下:

| DMU | x₁ | x₂ | y₁ | y₂ |
|-----|----|----|----|----|
| A   | 2  | 3  | 3  | 2  |
| B   | 3  | 2  | 4  | 1  |
| C   | 4  | 3  | 2  | 4  |
| D   | 3  | 5  | 3  | 2  |

步骤1: 计算DMU A的效率值和权重

构建DMU A的线性规划模型:
max h_A = μ₁y₁_A + μ₂y₂_A = 3μ₁ + 2μ₂

s.t. ω₁x₁_A + ω₂x₂_A = 2ω₁ + 3ω₂ = 1
     μ₁y₁_A + μ₂y₂_A - ω₁x₁_A - ω₂x₂_A = 3μ₁ + 2μ₂ - 2ω₁ - 3ω₂ ≤ 0
     μ₁y₁_B + μ₂y₂_B - ω₁x₁_B - ω₂x₂_B = 4μ₁ + 1μ₂ - 3ω₁ - 2ω₂ ≤ 0
     μ₁y₁_C + μ₂y₂_C - ω₁x₁_C - ω₂x₂_C = 2μ₁ + 4μ₂ - 4ω₁ - 3ω₂ ≤ 0
     μ₁y₁_D + μ₂y₂_D - ω₁x₁_D - ω₂x₂_D = 3μ₁ + 2μ₂ - 3ω₁ - 5ω₂ ≤ 0
     μ₁, μ₂, ω₁, ω₂ ≥ 0

求解此线性规划问题，得到最优解:
μ₁* = 0.333, μ₂* = 0.000, ω₁* = 0.500, ω₂* = 0.000

计算DMU A的效率值:
h_A = 3×0.333 + 2×0.000 = 1.000

计算输出权重:
w_y₁ = 0.333 / (0.333 + 0.000) = 1.000 (100%)
w_y₂ = 0.000 / (0.333 + 0.000) = 0.000 (0%)

计算输入权重:
w_x₁ = 0.500 / (0.500 + 0.000) = 1.000 (100%)
w_x₂ = 0.000 / (0.500 + 0.000) = 0.000 (0%)

同理，可计算其他DMU的效率值和权重。

步骤2: 计算综合权重

假设所有DMU都是效率前沿(h=1)，综合权重可由各DMU权重的平均值得到:
输出综合权重:
w̄_y₁ = (1.000 + 0.833 + 0.400 + 0.750) / 4 = 0.746 (74.6%)
w̄_y₂ = (0.000 + 0.167 + 0.600 + 0.250) / 4 = 0.254 (25.4%)

输入综合权重:
w̄_x₁ = (1.000 + 0.875 + 0.625 + 0.700) / 4 = 0.800 (80.0%)
w̄_x₂ = (0.000 + 0.125 + 0.375 + 0.300) / 4 = 0.200 (20.0%)

注：在实际应用中，通常需使用专业软件求解线性规划问题。
`
  },
  // 组合赋权法
  {
    name: "加法组合赋权法",
    type: "组合赋权法",
    detail: "加法组合赋权法通过线性加权的方式组合主观权重和客观权重，得到综合权重。",
    suitConditions: [
      "同时具有主客观权重",
      "需要平衡多种方法",
      "权重差异不大"
    ],
    advantages: [
      "操作简单",
      "计算方便",
      "综合主客观信息",
      "结果稳定"
    ],
    limitations: [
      "组合系数确定有难度",
      "可能淡化权重差异",
      "理论基础相对薄弱",
      "可能忽略极端情况"
    ],
    implementationSteps: [
      "1. 获取主观权重",
      "2. 获取客观权重",
      "3. 确定组合系数",
      "4. 线性加权组合",
      "5. 归一化处理"
    ],
    suitableScenarios: [
      "需平衡主客观因素的评价",
      "一般性综合评价问题",
      "社会经济评价、可持续发展评价"
    ],
    // 新增四个维度属性
    dimensionalAttributes: {
      taskDimension: {
        domain: ["社会经济评价", "可持续发展评价", "综合决策", "多准则评价"],
        purpose: ["平衡多种因素", "综合主客观信息", "评估单一对象的综合表现"],
        evaluationNature: ["描述性", "综合性"],
        complexity: ["中"],
        applicationScope: ["政府决策", "企业管理", "学术研究"]
      },
      dataDimension: {
        indicatorCount: ["中", "大"],
        variableType: ["定量", "混合"],
        dataStructure: "多源数据",
        dataQualityRequirement: "中",
        requiredDataTypes: ["主观评价数据", "客观指标数据"]
      },
      userDimension: {
        precision: ["中"],
        structure: ["多层次"],
        relation: "混合",
        methodPreference: "平衡",
        knowledgeLevel: ["中级"],
        riskTolerance: ["中"],
        specialRequirements: ["平衡主客观因素", "稳定性"]
      },
      environmentDimension: {
        expertiseLevel: "中等",
        timeConstraint: ["适中"],
        computingResource: ["充足"],
        environmentConstraints: ["需要多种数据源"]
      }
    },
    mathematicalModel: `加法组合赋权法的数学模型:

1. 基本模型
   假设有m个指标，得到k种不同权重确定方法的权重向量:
   W₁ = (w₁₁, w₁₂, ..., w₁ₘ)
   W₂ = (w₂₁, w₂₂, ..., w₂ₘ)
   ⋮
   Wₖ = (wₖ₁, wₖ₂, ..., wₖₘ)
   
   则加法组合权重W = (w₁, w₂, ..., wₘ)可表示为:
   
   W = α₁W₁ + α₂W₂ + ... + αₖWₖ
   
   其中，αᵢ为第i种权重方法的组合系数，且满足:
   α₁ + α₂ + ... + αₖ = 1，αᵢ ≥ 0

2. 主客观权重组合
   最常见的是主观权重W_s与客观权重W_o的组合:
   
   W = αW_s + (1-α)W_o
   
   其中，α∈[0,1]为主观权重的组合系数，
   (1-α)为客观权重的组合系数。

3. 组合系数的确定方法
   
   (1) 专家确定法
   由专家直接给定组合系数α₁, α₂, ..., αₖ
   
   (2) 最小离差平方和法
   使得组合权重与各单一权重的离差平方和最小:
   
   min F(α) = Σ Σ [wⱼ - wᵢⱼ]²
             i=1 j=1
   
   s.t. Σ αᵢ = 1
        i=1
        αᵢ ≥ 0, i=1,2,...,k
   
   (3) 信息熵法
   根据各权重方法的信息熵确定组合系数:
   
   αᵢ = (1 - Hᵢ) / Σ(1 - Hⱼ)
                   j=1
   
   其中，Hᵢ为第i种权重方法的信息熵
`,
    calculationExample: `加法组合赋权法计算示例:

假设对5个指标分别采用了主观赋权法(AHP)和客观赋权法(熵权法)得到两组权重:

| 指标 | AHP权重(W_s) | 熵权法权重(W_o) |
|------|-------------|----------------|
| X₁   | 0.35        | 0.15           |
| X₂   | 0.25        | 0.30           |
| X₃   | 0.20        | 0.25           |
| X₄   | 0.15        | 0.20           |
| X₅   | 0.05        | 0.10           |

步骤1: 确定组合系数
采用最小离差平方和法，构建优化模型:

min F(α) = Σ[α·w_sⱼ + (1-α)·w_oⱼ - w_sⱼ]² + Σ[α·w_sⱼ + (1-α)·w_oⱼ - w_oⱼ]²
          j=1                             j=1

化简得:
F(α) = (1-α)²·Σ(w_sⱼ - w_oⱼ)² + α²·Σ(w_sⱼ - w_oⱼ)²
               j=1                 j=1

= (α² + (1-α)²)·Σ(w_sⱼ - w_oⱼ)²
                  j=1

求导并令导数为0:
F'(α) = (2α - 2(1-α))·Σ(w_sⱼ - w_oⱼ)² = 0

解得:
α = 0.5

步骤2: 计算组合权重
W = 0.5·W_s + 0.5·W_o

w₁ = 0.5×0.35 + 0.5×0.15 = 0.25
w₂ = 0.5×0.25 + 0.5×0.30 = 0.275
w₃ = 0.5×0.20 + 0.5×0.25 = 0.225
w₄ = 0.5×0.15 + 0.5×0.20 = 0.175
w₅ = 0.5×0.05 + 0.5×0.10 = 0.075

检验:
w₁ + w₂ + w₃ + w₄ + w₅ = 0.25 + 0.275 + 0.225 + 0.175 + 0.075 = 1.000

步骤3: 结果分析
组合后的权重既考虑了专家主观判断的AHP权重，又结合了数据特征反映的熵权法权重，实现了主客观信息的综合平衡。

注：在实际应用中，组合系数α的取值可能不是0.5，而是根据特定问题的需求和数据特征确定。例如，当主观专家判断更重要时，可能会令α>0.5；当客观数据分析更重要时，可能会令α<0.5。
`
  },
  {
    name: "乘法组合赋权法",
    type: "组合赋权法",
    detail: "乘法组合赋权法通过乘法方式组合不同方法得到的权重，能更好地突出重要指标。",
    suitConditions: [
      "需要突出重要指标",
      "权重差异明显",
      "各方法结果可靠"
    ],
    advantages: [
      "能放大权重差异",
      "突出重要指标",
      "综合效果较好",
      "结果更具区分度"
    ],
    limitations: [
      "可能过度强化权重差异",
      "当权重为0时计算困难",
      "组合比例确定困难",
      "对异常值敏感"
    ],
    implementationSteps: [
      "1. 获取各方法权重",
      "2. 确定组合系数",
      "3. 乘法组合",
      "4. 归一化处理"
    ],
    suitableScenarios: [
      "需要突出关键因素的评价",
      "指标重要性差异明显的情况",
      "风险评估、重大决策分析"
    ],
    // 新增四个维度属性
    dimensionalAttributes: {
      taskDimension: {
        domain: ["风险评估", "重大决策分析", "关键指标评价", "优先级排序"],
        purpose: ["突出关键因素", "强化权重差异", "评估单一对象的综合表现"],
        evaluationNature: ["描述性", "区分性"],
        complexity: ["中", "高"],
        applicationScope: ["企业战略决策", "项目筛选", "资源分配"]
      },
      dataDimension: {
        indicatorCount: ["中"],
        variableType: ["定量", "混合"],
        dataStructure: "多源数据",
        dataQualityRequirement: "高",
        requiredDataTypes: ["主观评价数据", "客观指标数据"]
      },
      userDimension: {
        precision: ["高"],
        structure: "多层次",
        relation: "差异明显",
        methodPreference: "综合",
        knowledgeLevel: ["中级", "高级"],
        riskTolerance: ["中", "高"],
        specialRequirements: ["突出关键指标", "强化差异"]
      },
      environmentDimension: {
        expertiseLevel: "中等",
        timeConstraint: ["适中"],
        computingResource: ["充足"],
        environmentConstraints: ["需要多种数据源", "需要高质量数据"]
      }
    },
    mathematicalModel: `乘法组合赋权法的数学模型:

1. 基本模型
   假设有m个指标，得到k种不同权重确定方法的权重向量:
   W₁ = (w₁₁, w₁₂, ..., w₁ₘ)
   W₂ = (w₂₁, w₂₂, ..., w₂ₘ)
   ⋮
   Wₖ = (wₖ₁, wₖ₂, ..., wₖₘ)
   
   则乘法组合的未归一化权重u = (u₁, u₂, ..., uₘ)可表示为:
   
   uⱼ = (w₁ⱼ)^α₁ × (w₂ⱼ)^α₂ × ... × (wₖⱼ)^αₖ
   
   其中，αᵢ为第i种权重方法的组合系数，且满足:
   α₁ + α₂ + ... + αₖ = 1，αᵢ ≥ 0
   
2. 归一化处理
   wⱼ = uⱼ / Σuⱼ, j=1,2,...,m
   
   其中，wⱼ为归一化后的第j个指标的组合权重

3. 主客观权重组合
   最常见的是主观权重W_s与客观权重W_o的组合:
   
   uⱼ = (w_sⱼ)^α × (w_oⱼ)^(1-α)
   
   其中，α∈[0,1]为主观权重的组合系数，
   (1-α)为客观权重的组合系数。

4. 权重为0的处理方法
   当某种方法得到的某指标权重为0时，有两种常用处理方法:
   
   (1) 添加小常数：w'ᵢⱼ = wᵢⱼ + ε，其中ε为一个很小的正数
   
   (2) 对数转换：uⱼ = exp(α₁ln(w₁ⱼ+ε) + α₂ln(w₂ⱼ+ε) + ... + αₖln(wₖⱼ+ε))
`,
    calculationExample: `乘法组合赋权法计算示例:

假设对5个指标分别采用了层次分析法(AHP)和熵权法得到两组权重:

| 指标 | AHP权重(W_s) | 熵权法权重(W_o) |
|------|-------------|----------------|
| X₁   | 0.35        | 0.15           |
| X₂   | 0.25        | 0.30           |
| X₃   | 0.20        | 0.25           |
| X₄   | 0.15        | 0.20           |
| X₅   | 0.05        | 0.10           |

步骤1: 确定组合系数
假设AHP权重和熵权法权重同等重要，则α = 0.5

步骤2: 计算乘法组合的未归一化权重
u₁ = (0.35)^0.5 × (0.15)^0.5 = √(0.35×0.15) = 0.229
u₂ = (0.25)^0.5 × (0.30)^0.5 = √(0.25×0.30) = 0.274
u₃ = (0.20)^0.5 × (0.25)^0.5 = √(0.20×0.25) = 0.224
u₄ = (0.15)^0.5 × (0.20)^0.5 = √(0.15×0.20) = 0.173
u₅ = (0.05)^0.5 × (0.10)^0.5 = √(0.05×0.10) = 0.071

步骤3: 归一化处理
总和：u₁+u₂+u₃+u₄+u₅ = 0.229+0.274+0.224+0.173+0.071 = 0.971

w₁ = 0.229/0.971 = 0.236 (23.6%)
w₂ = 0.274/0.971 = 0.282 (28.2%)
w₃ = 0.224/0.971 = 0.231 (23.1%)
w₄ = 0.173/0.971 = 0.178 (17.8%)
w₅ = 0.071/0.971 = 0.073 (7.3%)

检验: w₁+w₂+w₃+w₄+w₅ = 0.236+0.282+0.231+0.178+0.073 = 1.000

步骤4: 对比分析
比较乘法组合权重与加法组合权重(假设加法组合系数也为0.5):

| 指标 | AHP权重 | 熵权法权重 | 加法组合权重 | 乘法组合权重 |
|------|--------|-----------|------------|------------|
| X₁   | 0.35   | 0.15      | 0.250      | 0.236      |
| X₂   | 0.25   | 0.30      | 0.275      | 0.282      |
| X₃   | 0.20   | 0.25      | 0.225      | 0.231      |
| X₄   | 0.15   | 0.20      | 0.175      | 0.178      |
| X₅   | 0.05   | 0.10      | 0.075      | 0.073      |

可以看出，乘法组合权重相比加法组合权重略微放大了X₂和X₃的权重差异，
对于同时被两种方法认为重要的指标(如X₂)，乘法组合更能突出其重要性；
而对于某一方法认为重要但另一方法认为不重要的指标(如X₁)，
乘法组合会相对降低其权重。
`
  },
  {
    name: "最优组合赋权法",
    type: "组合赋权法",
    detail: "最优组合赋权法通过数学优化方法确定最优组合系数，使组合权重与各单一方法权重的偏差最小。",
    suitConditions: [
      "有多个权重结果",
      "需要最优组合",
      "数据质量好"
    ],
    advantages: [
      "基于数学优化",
      "结果更具客观性",
      "降低单一方法局限性",
      "理论基础扎实"
    ],
    limitations: [
      "计算复杂",
      "优化目标设定困难",
      "对数据质量要求高",
      "可能陷入局部最优"
    ],
    implementationSteps: [
      "1. 获取各方法权重",
      "2. 构建优化目标函数",
      "3. 设定约束条件",
      "4. 求解最优组合系数",
      "5. 计算组合权重"
    ],
    suitableScenarios: [
      "高精度要求的评价问题",
      "数据较为充分的情况",
      "金融投资、资源配置优化"
    ],
    mathematicalModel: `最优组合赋权法的数学模型:

1. 基本模型
   假设有m个指标，得到k种不同权重确定方法的权重向量:
   W₁ = (w₁₁, w₁₂, ..., w₁ₘ)
   W₂ = (w₂₁, w₂₂, ..., w₂ₘ)
   ⋮
   Wₖ = (wₖ₁, wₖ₂, ..., wₖₘ)
   
   则组合权重W = (w₁, w₂, ..., wₘ)可表示为:
   
   W = α₁W₁ + α₂W₂ + ... + αₖWₖ
   
   其中，αᵢ为第i种权重方法的组合系数，且满足:
   α₁ + α₂ + ... + αₖ = 1，αᵢ ≥ 0

2. 最小偏差平方和模型
   希望组合权重W与各单一权重Wᵢ的偏差平方和最小:
   
   min F(α) = Σ Σ (wⱼ - wᵢⱼ)²
             i=1 j=1
   
   s.t. Σ αᵢ = 1
        i=1
        αᵢ ≥ 0, i=1,2,...,k
   
   其中，wⱼ = Σ αᵢwᵢⱼ
              i=1

3. 最小相对熵模型
   基于信息论的相对熵最小化:
   
   min G(α) = Σ Σ wᵢⱼln(wᵢⱼ/wⱼ)
             i=1 j=1
   
   s.t. Σ αᵢ = 1
        i=1
        αᵢ ≥ 0, i=1,2,...,k
   
   其中，wⱼ = Σ αᵢwᵢⱼ
              i=1

4. 最小最大偏差模型
   使得组合权重与各单一权重的最大偏差最小:
   
   min H(α) = max |wⱼ - wᵢⱼ|
               i,j
   
   s.t. Σ αᵢ = 1
        i=1
        αᵢ ≥ 0, i=1,2,...,k
   
   其中，wⱼ = Σ αᵢwᵢⱼ
              i=1
`,
    calculationExample: `最优组合赋权法计算示例:

假设对5个指标采用了3种不同方法得到的权重如下:

| 指标 | AHP(W₁) | 熵权法(W₂) | 变异系数法(W₃) |
|------|---------|-----------|--------------|
| X₁   | 0.35    | 0.15      | 0.25         |
| X₂   | 0.25    | 0.30      | 0.20         |
| X₃   | 0.20    | 0.25      | 0.30         |
| X₄   | 0.15    | 0.20      | 0.15         |
| X₅   | 0.05    | 0.10      | 0.10         |

步骤1: 构建最小偏差平方和模型
组合权重: wⱼ = α₁w₁ⱼ + α₂w₂ⱼ + α₃w₃ⱼ

目标函数:
min F(α) = Σ Σ (αᵢ₁w₁ⱼ + α₂w₂ⱼ + α₃w₃ⱼ - wᵢⱼ)²
          i=1 j=1

s.t. α₁ + α₂ + α₃ = 1
     α₁, α₂, α₃ ≥ 0

步骤2: 求解优化问题
展开目标函数并利用拉格朗日乘数法求解得：
α₁ = 0.333, α₂ = 0.333, α₃ = 0.333

这表明三种方法在最小偏差平方和准则下应赋予相同权重。
(注: 实际问题中，最优解可能不是均匀分布的)

步骤3: 计算组合权重
w₁ = 0.333×0.35 + 0.333×0.15 + 0.333×0.25 = 0.250
w₂ = 0.333×0.25 + 0.333×0.30 + 0.333×0.20 = 0.250
w₃ = 0.333×0.20 + 0.333×0.25 + 0.333×0.30 = 0.250
w₄ = 0.333×0.15 + 0.333×0.20 + 0.333×0.15 = 0.167
w₅ = 0.333×0.05 + 0.333×0.10 + 0.333×0.10 = 0.083

步骤4: 计算组合权重与各方法权重的偏差
对于W₁:
|w₁-w₁₁| = |0.250-0.35| = 0.100
|w₂-w₁₂| = |0.250-0.25| = 0.000
|w₃-w₁₃| = |0.250-0.20| = 0.050
|w₄-w₁₄| = |0.167-0.15| = 0.017
|w₅-w₁₅| = |0.083-0.05| = 0.033

对于W₂:
|w₁-w₂₁| = |0.250-0.15| = 0.100
|w₂-w₂₂| = |0.250-0.30| = 0.050
|w₃-w₂₃| = |0.250-0.25| = 0.000
|w₄-w₂₄| = |0.167-0.20| = 0.033
|w₅-w₂₅| = |0.083-0.10| = 0.017

对于W₃:
|w₁-w₃₁| = |0.250-0.25| = 0.000
|w₂-w₃₂| = |0.250-0.20| = 0.050
|w₃-w₃₃| = |0.250-0.30| = 0.050
|w₄-w₃₄| = |0.167-0.15| = 0.017
|w₅-w₃₅| = |0.083-0.10| = 0.017

最大偏差为0.100，总偏差平方和为0.041

步骤5: 比较不同组合方法的结果

| 指标 | AHP | 熵权法 | 变异系数法 | 最优组合权重 |
|------|-----|--------|-----------|------------|
| X₁   | 0.35| 0.15   | 0.25      | 0.250      |
| X₂   | 0.25| 0.30   | 0.20      | 0.250      |
| X₃   | 0.20| 0.25   | 0.30      | 0.250      |
| X₄   | 0.15| 0.20   | 0.15      | 0.167      |
| X₅   | 0.05| 0.10   | 0.10      | 0.083      |

可以看出，最优组合权重是三种方法权重的折中结果，
在整体上最大程度减小了与各单一方法权重的偏差。
`
  },
  {
    name: "博弈论组合赋权法",
    type: "组合赋权法",
    detail: "博弈论组合赋权法将不同赋权方法视为博弈参与者，通过博弈论方法确定最优组合权重。",
    suitConditions: [
      "存在多方利益博弈",
      "需要平衡多种方法",
      "系统复杂"
    ],
    advantages: [
      "平衡主观偏好和客观数据",
      "理论基础扎实",
      "结果更具合理性",
      "考虑多方利益"
    ],
    limitations: [
      "理论假设较强",
      "计算相对复杂",
      "需要专业知识支持",
      "结果可能不稳定"
    ],
    implementationSteps: [
      "1. 确定博弈参与者",
      "2. 构建收益矩阵",
      "3. 求解纳什均衡",
      "4. 确定组合权重"
    ],
    suitableScenarios: [
      "存在多方利益博弈的决策",
      "复杂系统评价",
      "公共政策评估、资源分配决策"
    ],
    // 新增四个维度属性
    dimensionalAttributes: {
      taskDimension: {
        domain: ["公共政策评估", "资源分配", "复杂系统评价", "多方博弈决策"],
        purpose: ["平衡多方利益", "寻求最优均衡", "评估单一对象的综合表现"],
        evaluationNature: ["博弈性", "均衡性", "综合性"],
        complexity: ["高"],
        applicationScope: ["政府决策", "公共管理", "复杂系统"]
      },
      dataDimension: {
        indicatorCount: ["中", "大"],
        variableType: ["定量", "混合"],
        dataStructure: "多源数据",
        dataQualityRequirement: "高",
        requiredDataTypes: ["多方评价数据", "博弈信息"]
      },
      userDimension: {
        precision: ["高"],
        structure: ["多层次", "网络结构"],
        relation: "博弈",
        methodPreference: "均衡",
        knowledgeLevel: ["高级"],
        riskTolerance: ["中", "高"],
        specialRequirements: ["利益平衡", "博弈均衡"]
      },
      environmentDimension: {
        expertiseLevel: "高",
        timeConstraint: ["适中", "长期"],
        computingResource: ["充足", "高级"],
        environmentConstraints: ["需要专业知识", "多方参与"]
      }
    },
    mathematicalModel: `博弈论组合赋权法的数学模型:

1. 基本思想
   将不同的权重确定方法视为博弈中的"参与者"，
   每种方法根据自身原则确定的权重视为其"策略"，
   通过求解博弈均衡得到最优组合权重。

2. 合作博弈模型
   假设有m个指标，k种不同权重确定方法的权重矩阵:
   
   W = 
   | w₁₁  w₁₂  ...  w₁ₘ |
   | w₂₁  w₂₂  ...  w₂ₘ |
   | ...  ...  ...  ... |
   | wₖ₁  wₖ₂  ...  wₖₘ |
   
   其中，wᵢⱼ表示第i种方法对第j个指标的权重值。
   
   (1) 特征函数v定义:
   对于任意联盟S∈2^{1,2,...,k}，定义特征函数v(S)为:
   
   v(S) = Σ   Σ  wᵢⱼ × ln(wᵢⱼ)
          i∈S j=1
   
   (2) Shapley值计算:
   第i个参与者(权重方法)的Shapley值为:
   
   φᵢ = Σ    |S|!(k-|S|-1)!  [v(S∪{i}) - v(S)]
        S⊆N\\{i}     k!
   
   (3) 组合系数确定:
   将归一化的Shapley值作为组合系数:
   
   αᵢ = φᵢ / Σφⱼ, i=1,2,...,k
        j=1

3. 非合作博弈模型(Nash均衡)
   
   (1) 构建收益矩阵:
   Aᵢⱼ = Σ wᵢₖ × wⱼₖ, i,j=1,2,...,k
         k=1
   
   (2) 不动点方程:
   令α = (α₁, α₂, ..., αₖ)为各方法的组合系数向量，
   则Nash均衡满足:
   
   αᵢ = αᵢ × Σαⱼ×Aᵢⱼ / Σαⱼ×Σαₗ×Aⱼₗ, i=1,2,...,k
              j=1       j=1 l=1
   
   (3) 迭代求解:
   通过迭代法求解不动点方程，得到Nash均衡解α。

4. 组合权重计算
   最终组合权重:
   
   wⱼ = Σ αᵢ × wᵢⱼ, j=1,2,...,m
        i=1
   
   其中，wⱼ为第j个指标的组合权重。`,
    calculationExample: `博弈论组合赋权法计算示例:

假设有4个指标，采用3种不同方法(AHP、熵权法、变异系数法)得到的权重矩阵W:

W = 
| 0.40  0.30  0.20  0.10 |  (AHP权重)
| 0.25  0.35  0.25  0.15 |  (熵权法权重)
| 0.20  0.25  0.40  0.15 |  (变异系数法权重)

步骤1: 构建收益矩阵A
A₁₁ = 0.40×0.40 + 0.30×0.30 + 0.20×0.20 + 0.10×0.10 = 0.300
A₁₂ = 0.40×0.25 + 0.30×0.35 + 0.20×0.25 + 0.10×0.15 = 0.295
A₁₃ = 0.40×0.20 + 0.30×0.25 + 0.20×0.40 + 0.10×0.15 = 0.255
A₂₁ = 0.25×0.40 + 0.35×0.30 + 0.25×0.20 + 0.15×0.10 = 0.295
A₂₂ = 0.25×0.25 + 0.35×0.35 + 0.25×0.25 + 0.15×0.15 = 0.273
A₂₃ = 0.25×0.20 + 0.35×0.25 + 0.25×0.40 + 0.15×0.15 = 0.255
A₃₁ = 0.20×0.40 + 0.25×0.30 + 0.40×0.20 + 0.15×0.10 = 0.255
A₃₂ = 0.20×0.25 + 0.25×0.35 + 0.40×0.25 + 0.15×0.15 = 0.255
A₃₃ = 0.20×0.20 + 0.25×0.25 + 0.40×0.40 + 0.15×0.15 = 0.275

收益矩阵A:
A = 
| 0.300  0.295  0.255 |
| 0.295  0.273  0.255 |
| 0.255  0.255  0.275 |

步骤2: 求解Nash均衡
使用迭代法求解:
初始值: α⁰ = (1/3, 1/3, 1/3)

第1次迭代:
分子:
α₁¹(分子) = 1/3×(0.300×1/3 + 0.295×1/3 + 0.255×1/3) = 0.094
α₂¹(分子) = 1/3×(0.295×1/3 + 0.273×1/3 + 0.255×1/3) = 0.091
α₃¹(分子) = 1/3×(0.255×1/3 + 0.255×1/3 + 0.275×1/3) = 0.087

分母:
1/3×(0.094 + 0.091 + 0.087) = 0.091

更新值:
α₁¹ = 0.094/0.091 = 1.033
α₂¹ = 0.091/0.091 = 1.000
α₃¹ = 0.087/0.091 = 0.956

归一化:
α₁¹ = 1.033/(1.033 + 1.000 + 0.956) = 0.345
α₂¹ = 1.000/(1.033 + 1.000 + 0.956) = 0.334
α₃¹ = 0.956/(1.033 + 1.000 + 0.956) = 0.320

继续迭代直至收敛，得到均衡解:
α* = (0.350, 0.335, 0.315)

步骤3: 计算组合权重
w₁ = 0.350×0.40 + 0.335×0.25 + 0.315×0.20 = 0.290
w₂ = 0.350×0.30 + 0.335×0.35 + 0.315×0.25 = 0.302
w₃ = 0.350×0.20 + 0.335×0.25 + 0.315×0.40 = 0.278
w₄ = 0.350×0.10 + 0.335×0.15 + 0.315×0.15 = 0.131

步骤4: 验证
w₁ + w₂ + w₃ + w₄ = 0.290 + 0.302 + 0.278 + 0.131 = 1.001 ≈ 1.000

步骤5: 结果分析
博弈论组合权重考虑了3种方法之间的相互影响，
AHP方法获得最高的组合系数(0.350)，这表明在博弈过程中，
AHP方法的"策略"与其他方法的协同效应最强。
最终的组合权重在三种单一方法权重的基础上，
实现了各方法之间的均衡，得到了一个更为合理的折中方案。`
  },
  {
    name: "多目标规划组合赋权法",
    type: "组合赋权法",
    detail: "多目标规划组合赋权法通过多目标规划方法，同时优化多个目标来确定最优组合权重。",
    suitConditions: [
      "存在多个优化目标",
      "目标间存在冲突",
      "系统复杂"
    ],
    advantages: [
      "同时优化多个目标",
      "综合考虑多种因素",
      "结果全面合理",
      "理论基础扎实"
    ],
    limitations: [
      "建模复杂",
      "求解困难",
      "目标函数确定有挑战",
      "计算量大"
    ],
    implementationSteps: [
      "1. 确定优化目标",
      "2. 构建多目标规划模型",
      "3. 选择求解方法",
      "4. 求解最优解",
      "5. 确定组合权重"
    ],
    suitableScenarios: [
      "多目标冲突的决策问题",
      "复杂系统优化",
      "可持续发展评价、综合规划"
    ],
    // 新增四个维度属性
    dimensionalAttributes: {
      taskDimension: {
        domain: ["可持续发展评价", "综合规划", "复杂系统优化", "多目标决策"],
        purpose: ["同时优化多目标", "平衡冲突目标", "评估单一对象的综合表现"],
        evaluationNature: ["优化性", "综合性"],
        complexity: ["高"],
        applicationScope: ["政府规划", "企业战略", "复杂系统管理"]
      },
      dataDimension: {
        indicatorCount: ["中", "大"],
        variableType: ["定量", "混合"],
        dataStructure: "多维数据",
        dataQualityRequirement: "高",
        requiredDataTypes: ["多目标数据", "约束条件数据"]
      },
      userDimension: {
        precision: ["高"],
        structure: ["多层次", "复杂"],
        relation: "冲突",
        methodPreference: "优化",
        knowledgeLevel: ["高级"],
        riskTolerance: ["中", "高"],
        specialRequirements: ["多目标优化", "冲突平衡"]
      },
      environmentDimension: {
        expertiseLevel: "高",
        timeConstraint: ["适中", "长期"],
        computingResource: ["充足", "高级"],
        environmentConstraints: ["需要专业优化软件", "需要专业知识"]
      }
    },
    mathematicalModel: `多目标规划组合赋权法的数学模型:

1. 基本思想
   通过构建多目标规划模型，同时优化多个目标函数，
   求解得到最优组合权重。

2. 一般模型
   假设有m个指标，k种不同权重确定方法的权重矩阵:
   
   W = 
   | w₁₁  w₁₂  ...  w₁ₘ |
   | w₂₁  w₂₂  ...  w₂ₘ |
   | ...  ...  ...  ... |
   | wₖ₁  wₖ₂  ...  wₖₘ |
   
   其中，wᵢⱼ表示第i种方法对第j个指标的权重值。
   
   多目标规划模型:
   
   min F₁(α) = Σ Σ [αᵢwᵢⱼ - wᵢⱼ]²
              i=1 j=1
   
   min F₂(α) = Σ Σ [αᵢwᵢⱼ - w*ⱼ]²
              i=1 j=1
   
   其中，w*ⱼ为第j个指标的理想权重(如专家共识值)
   
   s.t. Σ αᵢ = 1
        i=1
        αᵢ ≥ 0, i=1,2,...,k

3. 求解方法
   
   (1) 线性加权法
   将多个目标函数转化为单一目标函数:
   
   min F(α) = β₁F₁(α) + β₂F₂(α) + ... + βₚFₚ(α)
   
   其中，βᵢ为第i个目标函数的权重，且Σβᵢ = 1
   
   (2) ε-约束法
   选择一个主要目标函数进行优化，其他目标函数作为约束:
   
   min F₁(α)
   
   s.t. F₂(α) ≤ ε₂
        F₃(α) ≤ ε₃
        ...
        Fₚ(α) ≤ εₚ
        
        Σ αᵢ = 1
        i=1
        αᵢ ≥ 0, i=1,2,...,k
   
   (3) 目标规划法
   引入正负偏差变量，最小化偏差:
   
   min Σ(wᵢ⁺d⁺ᵢ + wᵢ⁻d⁻ᵢ)
      i=1
   
   s.t. F₁(α) + d⁺₁ - d⁻₁ = T₁
        F₂(α) + d⁺₂ - d⁻₂ = T₂
        ...
        Fₚ(α) + d⁺ₚ - d⁻ₚ = Tₚ
        
        Σ αᵢ = 1
        i=1
        αᵢ ≥ 0, i=1,2,...,k
        d⁺ᵢ, d⁻ᵢ ≥ 0, i=1,2,...,p
   
   其中，Tᵢ为第i个目标的目标值，
   d⁺ᵢ和d⁻ᵢ分别为正偏差和负偏差变量。

4. 组合权重计算
   求解多目标规划模型得到最优组合系数α*，
   计算组合权重:
   
   wⱼ = Σ α*ᵢ × wᵢⱼ, j=1,2,...,m
        i=1
   
   其中，wⱼ为第j个指标的组合权重。
`,
    calculationExample: `多目标规划组合赋权法计算示例:

假设有4个指标，采用3种不同方法(AHP、熵权法、变异系数法)得到的权重矩阵W:

W = 
| 0.40  0.30  0.20  0.10 |  (AHP权重)
| 0.25  0.35  0.25  0.15 |  (熵权法权重)
| 0.20  0.25  0.40  0.15 |  (变异系数法权重)

步骤1: 构建多目标规划模型
设定两个目标函数:

(1) 最小化组合权重与各单一方法权重的离差平方和:
F₁(α) = Σ Σ [αᵢwᵢⱼ - wᵢⱼ]²
       i=1 j=1

(2) 最小化组合权重的信息熵:
F₂(α) = -Σ wⱼln(wⱼ)
        j=1

其中，wⱼ = α₁w₁ⱼ + α₂w₂ⱼ + α₃w₃ⱼ

约束条件:
α₁ + α₂ + α₃ = 1
α₁, α₂, α₃ ≥ 0

步骤2: 采用线性加权法
设定目标函数权重β₁ = 0.6, β₂ = 0.4，构建综合目标函数:
F(α) = 0.6F₁(α) + 0.4F₂(α)

步骤3: 求解优化模型
使用数值优化方法求解，得到最优解:
α* = (0.35, 0.40, 0.25)

步骤4: 计算组合权重
w₁ = 0.35×0.40 + 0.40×0.25 + 0.25×0.20 = 0.290
w₂ = 0.35×0.30 + 0.40×0.35 + 0.25×0.25 = 0.308
w₃ = 0.35×0.20 + 0.40×0.25 + 0.25×0.40 = 0.270
w₄ = 0.35×0.10 + 0.40×0.15 + 0.25×0.15 = 0.133

步骤5: 验证
w₁ + w₂ + w₃ + w₄ = 0.290 + 0.308 + 0.270 + 0.133 = 1.001 ≈ 1.000

步骤6: 结果分析
多目标规划组合赋权法同时考虑了最小化离差和最小化信息熵两个目标，
熵权法获得最高的组合系数(0.40)，这表明在多目标优化过程中，
熵权法对实现设定的目标贡献最大。
最终的组合权重在三种单一方法权重的基础上，
实现了多个目标的综合优化，得到了一个更为全面合理的折中方案。`
  }
];

/**
 * 获取方法基本信息
 * @returns {Array} 返回简化的方法信息列表
 */
function getMethodsBasicInfo() {
  return weightMethodsDB.map(method => ({
    name: method.name,
    type: method.type,
    advantages: method.advantages.slice(0, 3),
    suitableScenarios: method.suitableScenarios
  }));
}

/**
 * 获取方法详细信息（包含数学模型和计算示例）
 * @param {string} methodName 方法名称
 * @returns {Object|null} 返回方法详细信息或null
 */
function getMethodDetail(methodName) {
  return weightMethodsDB.find(method => method.name === methodName) || null;
}

/**
 * 获取方法详细信息（不包含数学模型和计算示例）
 * @param {string} methodName 方法名称
 * @returns {Object|null} 返回不含数学模型和计算示例的方法详细信息或null
 */
function getMethodDetailForAgent(methodName) {
  const method = weightMethodsDB.find(method => method.name === methodName);
  if (!method) return null;
  
  // 创建一个不包含数学模型和计算示例的方法副本
  const { mathematicalModel, calculationExample, ...methodInfo } = method;
  return methodInfo;
}

/**
 * 根据条件筛选方法
 * @param {Object} criteria 筛选条件
 * @returns {Array} 返回满足条件的方法列表
 */
function filterMethods(criteria) {
  return weightMethodsDB.filter(method => {
    // 根据类型筛选
    if (criteria.type && method.type !== criteria.type) {
      return false;
    }
    
    // 根据适用条件筛选
    if (criteria.conditions && criteria.conditions.length > 0) {
      const matchCondition = criteria.conditions.some(condition => 
        method.suitConditions.some(sc => sc.includes(condition))
      );
      if (!matchCondition) return false;
    }
    
    // 根据场景筛选
    if (criteria.scenario && !method.suitableScenarios.includes(criteria.scenario)) {
      return false;
    }
    
    return true;
  });
}

/**
 * 筛选方法并返回适合推荐agent的结果（不包含数学模型和计算示例）
 * @param {Object} criteria 筛选条件
 * @returns {Array} 返回没有数学模型和计算示例的满足条件的方法列表
 */
function filterMethodsForAgent(criteria) {
  const methods = filterMethods(criteria);
  return methods.map(method => {
    const { mathematicalModel, calculationExample, ...methodInfo } = method;
    return methodInfo;
  });
}

// 导出方法库和筛选函数
export { weightMethodsDB, filterMethods, getMethodDetail, getMethodDetailForAgent, getMethodsBasicInfo, filterMethodsForAgent }; 